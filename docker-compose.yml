version: '3.5'

services:
  server:
    build:
      context: .
      dockerfile: compose/server/Dockerfile
    container_name: server
    env_file: .env
    ports:
      - 5001:5001
    networks:
      - mynetwork
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy

  db:
    build:
      context: .
      dockerfile: compose/db/Dockerfile
    container_name: db
    env_file: .env
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - DB:/var/lib/postgresql/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'"]
      retries: 5
      interval: 5s
      start_period: 5s

  test_db:
    build:
      context: .
      dockerfile: compose/test_db/Dockerfile
    container_name: test_db
    env_file: .env
    ports:
      - 5433:5433
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - TEST_DB:/var/lib/postgresql/test_data
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d postgres'" ]
      retries: 5
      interval: 5s
      start_period: 5s

networks:
  mynetwork:

volumes:
  DB:
  TEST_DB:
